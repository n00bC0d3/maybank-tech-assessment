apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  namespace: {{ .Release.Namespace }}

spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: {{ .Values.appName }}
      containers:
      - name: example-container
        image: {{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}
        command: [ "sleep", "3600" ]
        envFrom:
        - secretRef:
            name: {{ .Values.secret.name }}
        volumeMounts:
        - mountPath: "/data"
          name: efs-volume
        - mountPath: "/config"
          name: config-volume
      volumes:
      - name: efs-volume
        persistentVolumeClaim:
          claimName: {{ .Values.deployment.pvc.claimName }}
      - name: config-volume
        configMap:
          name: {{ .Values.configMap.name }}
          items:
          - key: config-file.properties
            path: config-file.properties
